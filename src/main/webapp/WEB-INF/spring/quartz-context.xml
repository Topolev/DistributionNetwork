<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!-- Quartz requires a separate 'quartz.properties' file -->
		<property name="configLocation" value="WEB-INF/quartz.properties"/>

		<!-- reference to our 'autowiring job factory bean', defined above: -->
		<property name="jobFactory" ref="defaultSpringBeanJobFactory"/>

		<!--&lt;!&ndash; Boolean controlling whether you want to override-->
              <!--the job definitions in the DB on the app start up.-->
              <!--We'll talk about it more in the next section. &ndash;&gt;-->

		<!--&lt;!&ndash; I will not explain the next three properties, just use it as shown: &ndash;&gt;-->
		<!--<property name="autoStartup" value="true" />-->
		<!--<property name="schedulerName" value="quartzScheduler"/>-->
		<!--<property name="applicationContextSchedulerContextKey" value="applicationContext"/>-->

		<!--&lt;!&ndash; Controls whether to wait for jobs completion on app shutdown, we use 'true' &ndash;&gt;-->
		<!--<property name="waitForJobsToCompleteOnShutdown" value="false"/>-->

		<!-- You can override any property from the 'quartz.properties' here,
             using the more flexible Spring mechanisms, for example: -->
		<!--<property name="quartzProperties">-->
			<!--<props>-->
				<!--<prop key="org.quartz.jobStore.misfireThreshold">-->
					<!--${scheduler.quartz.prop.jobStore.misfireThreshold}</prop>-->
				<!--<prop key="org.quartz.threadPool.threadCount">-->
					<!--${scheduler.quartz.prop.threadPool.threadCount}</prop>-->
			<!--</props>-->
		<!--</property>-->

		<!--&lt;!&ndash; Tell the Quartz scheduler about the triggers.-->
              <!--We have implemented the 'quartzTriggers' bean in the 'Jobs and triggers' section.-->
              <!--No need to pass job definitions, since triggers created via Spring know their jobs.-->
              <!--Later we'll see a case when we'll have to disable this and pass the jobs explicitly.&ndash;&gt;-->
		<!--<property name="triggers" ref="quartzTriggers"/>-->
	</bean>

</beans>